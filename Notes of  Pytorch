CNN:
#      h*w*c

# 卷积层：输入数据为三维，需要进行特征提取，因为不同区域不同特征不同，边界特征不重要，要区别进行处理
#      首先分割图像，每一块由多个像素点组成，拿出来进行特征提取，要选它的一个特征值，用一组权重参数来提取特征值
#      用 权重参数矩阵 去进行卷积操作    目标：找到一个最好的权重参数矩阵

# 图像颜色通道：RGB（red，green，blue）
#      实际计算中，每个通道单独去算，最后再加到一起（加法操作）
#      1、输入图像
#      2、分区域，进行特征提取，随机初始化一组权重参数，flter（助手）-卷积核-原始数据当中的某个小区域进行卷积操作，前两个是区域大小，最后一个参数必须是和图像一样的
#      3、用内积做计算，所有点位对应相乘，最后相加
#      4、rgb通道再相加，再加上一个偏置项bias，得到的最后结果叫feature map（特征图）
#      5、可以定义多个权重参数（两种不同特征提取方法），多个维度进行特征提取，从而丰富特征，比如垂直和竖直的特征提取

# 在卷积得到后的特征图的基础上再进行卷积（进一步的特征提取）

# 几个参数值
#      1、滑动窗口的步长，每一次向右移动几个单元格，结果也不一样，移动的次数越多，得到的特征值越多。
#         步长小，比较细腻，特征丰富。    图像任务：最好为1（正方形的filter）     文本数据：看情况（长方形filter）  与任务相关
#      2、卷积核尺寸：选择区域大小不一样，卷积核越小约细腻，3*3（最小），
#      3、边缘填充（zero padding）： 在边缘会加一圈边缘0，为了使边界点利用率提高（如果不这么做，边界的利用率太低，重要利用率高，一定程度上弥补了边界利用不充分的问题，添加0对最终结果无影响）
#         文本数据中的边缘填充，为了确保输入大小一样，在末尾加0
#      4、卷积核个数：每个卷积核的数值不一样（要分开进行初始化）

# 卷积结果的计算公式：
#      1、长度：H2=(H1-FH+2P)/S +1
#      2、宽度：W2=(W1-FW+2P)/S +1
#       W1,H1表示输入的宽度和高度；W2,H2表示输出特征图的宽度和高度；F表示卷积核的大小；S表示滑动窗口的步长；P表示边界填充（加几圈0）

# 卷积参数共享
#      对于每个区域，要确保卷积核相同，传统神经网络中就是参数过多，cnn用同一个核对区域进行特征提取
#      需要参数个数 卷积核（F*F+b参数个数）*卷积核个数

# 池化层
#      卷积得到的大量特征，特征点过多，需要压缩downsampling，有选择性的压缩。
#      最大池化：选择不同区域，选择出最大特征值。如果神经网络得到大的值，说明这个点更为重要
#      平均池化：选择不同区域，所以特征值相加/个数，现在已经被淘汰，一般只用maxpooling
#      没有涉及任何的矩阵运算

# 卷积神经网络如何执行任务：
#      1、卷积，特征提取，经过一次计算后，要进行一次RELU激活函数，进行一次变换（带参数计算的才能算一层，relu层没有计算，池化也没有，全连接层有）
#      2、两次卷积一次池化，进行压缩
#      3、得到最终特征图，如何转化为分类值？——全连接层【特征图拉成特征向量（一维度），几个分类】

# 经典网络架构
#      1、AlexNet：filter过大（现在定义越小越好）8层
#      2、VGG（14年）：D版本，filter（3*3） 16层   maxpooling后下次卷积时使特征图翻倍。比alexnet准确15%。 但是训练时间过长
#      16层的网络，要比30层的时候好，从本质上不应该越深越好嘛？ 因为随着卷积层数量增加，不敢保证特征提取越来越好
#      3、ResNet(15年）：同等映射，表现不好，设置权重参数为0？分两条路，直接跳到后续的层中堆叠，再进行计算，如果学不好，直接将权重参数设为0
#      好的用，不好的跳过，基本的出发点就是有保底，加上一个同等映射。（首选resnet）

# 感受野
#      最终数值由前方多少个数值得来的？希望感受野越大越好。
#      VGG中，能不能用大的代替3*3的？如果输入是h*w*c，c个卷积核，所需参数计算：
#      一个7*7的卷积核：c*（7*7*c)=47c^2       三个3*3的卷积核：3*c*（3*3*c)=27c^2
#      可以发现卷积核所需的参数更少一些，训练起来更容易，过拟合速率更低，特征提取更细致，加入的非线性变换会随之变换增多
